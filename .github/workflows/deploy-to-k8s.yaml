name: deploy-to-k8s
on:
  workflow_call:
    inputs:
      KUBECTL_VERSION:
        description: 'kubectl version'
        type: string
        required: true
      NAMESPACE:
        description: 'namespace of the k8s cluster'
        type: string
        required: true
      DEPLOYMENT_PATH:
        description: 'path to the deployment yaml file'
        type: string
        required: true
    secrets:
      KUBE_CONFIG_BASE64:
        description: 'kube config file in base64 encoded'
        required: true

jobs:
  deploy-k8s:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout caller repo
        uses: actions/checkout@v4
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ inputs.KUBECTL_VERSION }}
        id: install
      - name: Get KUBECONFIG
        id: get_kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_BASE64 }}" | base64 -d >> ${{ github.workspace }}/kubeconfig
          KUBECONFIG=${{ github.workspace }}/kubeconfig
          echo "::add-mask::$KUBECONFIG"
          echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_OUTPUT
      - name: Check existing resources in the namespace
        env:
          KUBECONFIG: ${{steps.get_kubeconfig.outputs.KUBECONFIG}}
        run: |
          # create namespace if not exists
          if [ -z "$(kubectl get ns | grep ${{ inputs.NAMESPACE }})" ]; then
            kubectl create ns ${{ inputs.NAMESPACE }}
            echo "INFO:: Created namespace ${{ inputs.NAMESPACE }}"
          fi
          kubectl -n ${{ inputs.NAMESPACE }} get all
      - name: Time window to manually cancel before deployment
        run: |
          sleep 30
      - name: Deploy to k8s
        env:
          KUBECONFIG: ${{steps.get_kubeconfig.outputs.KUBECONFIG}}
        run: |
          kubectl -n ${{ inputs.NAMESPACE }} apply -f ${{ github.workspace}}/${{ inputs.DEPLOYMENT_PATH }}
          kubectl -n ${{ inputs.NAMESPACE }} get all
      
